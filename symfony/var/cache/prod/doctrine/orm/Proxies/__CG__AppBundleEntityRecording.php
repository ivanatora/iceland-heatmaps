<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Recording extends \AppBundle\Entity\Recording implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'ref', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'meteo_ref', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'lat', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'lon', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'height', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'for_date', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'date_fetched', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'temperature', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'traffic_10_min', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'traffic_day', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'pressure'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'ref', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'meteo_ref', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'lat', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'lon', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'height', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'for_date', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'date_fetched', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'temperature', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'traffic_10_min', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'traffic_day', '' . "\0" . 'AppBundle\\Entity\\Recording' . "\0" . 'pressure'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Recording $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRef($ref)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRef', [$ref]);

        return parent::setRef($ref);
    }

    /**
     * {@inheritDoc}
     */
    public function getRef()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRef', []);

        return parent::getRef();
    }

    /**
     * {@inheritDoc}
     */
    public function setMeteoRef($meteoRef)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMeteoRef', [$meteoRef]);

        return parent::setMeteoRef($meteoRef);
    }

    /**
     * {@inheritDoc}
     */
    public function getMeteoRef()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMeteoRef', []);

        return parent::getMeteoRef();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLat($lat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLat', [$lat]);

        return parent::setLat($lat);
    }

    /**
     * {@inheritDoc}
     */
    public function getLat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLat', []);

        return parent::getLat();
    }

    /**
     * {@inheritDoc}
     */
    public function setLon($lon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLon', [$lon]);

        return parent::setLon($lon);
    }

    /**
     * {@inheritDoc}
     */
    public function getLon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLon', []);

        return parent::getLon();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeight($height)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeight', [$height]);

        return parent::setHeight($height);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeight', []);

        return parent::getHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setForDate($forDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForDate', [$forDate]);

        return parent::setForDate($forDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getForDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForDate', []);

        return parent::getForDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemperature($temperature)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemperature', [$temperature]);

        return parent::setTemperature($temperature);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemperature()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemperature', []);

        return parent::getTemperature();
    }

    /**
     * {@inheritDoc}
     */
    public function setTraffic10Min($traffic10Min)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTraffic10Min', [$traffic10Min]);

        return parent::setTraffic10Min($traffic10Min);
    }

    /**
     * {@inheritDoc}
     */
    public function getTraffic10Min()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTraffic10Min', []);

        return parent::getTraffic10Min();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrafficDay($trafficDay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrafficDay', [$trafficDay]);

        return parent::setTrafficDay($trafficDay);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrafficDay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrafficDay', []);

        return parent::getTrafficDay();
    }

    /**
     * {@inheritDoc}
     */
    public function setPressure($pressure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPressure', [$pressure]);

        return parent::setPressure($pressure);
    }

    /**
     * {@inheritDoc}
     */
    public function getPressure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPressure', []);

        return parent::getPressure();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFetched($dateFetched)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFetched', [$dateFetched]);

        return parent::setDateFetched($dateFetched);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFetched()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFetched', []);

        return parent::getDateFetched();
    }

}
